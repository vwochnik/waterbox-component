{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/lit-html/lib/modify-template.js","webpack:///./node_modules/lit-html/lib/shady-render.js","webpack:///./node_modules/lit-element/lib/updating-element.js","webpack:///./node_modules/lit-element/lib/decorators.js","webpack:///./node_modules/lit-element/lib/css-tag.js","webpack:///./node_modules/lit-element/lit-element.js","webpack:///./node_modules/@ctrl/tinycolor/dist/es/util.js","webpack:///./node_modules/@ctrl/tinycolor/dist/es/conversion.js","webpack:///./node_modules/@ctrl/tinycolor/dist/es/css-color-names.js","webpack:///./node_modules/@ctrl/tinycolor/dist/es/format-input.js","webpack:///./node_modules/@ctrl/tinycolor/dist/es/index.js","webpack:///./src/color.ts","webpack:///./src/renderer.ts","webpack:///./src/components/water-box.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","directives","WeakMap","isDirective","has","isCEPolyfill","undefined","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","text","v","setAttribute","_getValue","committer","directive","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","set","join","getTemplateElement","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","finalize","_classProperties","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","oldValue","_requestUpdate","configurable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","standardProperty","kind","descriptor","placement","initializer","clazz","assign","legacyProperty","proto","protoOrDescriptor","supportsAdoptingStyleSheets","Document","CSSStyleSheet","flattenStyles","flat","Infinity","arrayFlat","_styles","_getUniqueStyles","userStyles","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","adoptedStyleSheets","map","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","cssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","bound01","max","includes","parseFloat","isOnePointZero","processPercent","isPercentage","min","parseInt","abs","clamp01","val","boundAlpha","a","isNaN","convertToPercentage","pad2","rgbToHsl","g","b","h","hue2rgb","q","rgbToHsv","rgbToHex","allow3Char","hex","round","toString","startsWith","charAt","convertDecimalToHex","convertHexToDecimal","parseIntFromHex","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","delete","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","inputToRGB","color","rgb","ok","format","trim","named","matchers","rgba","hsl","hsla","hsv","hsva","hex8","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","floor","f","mod","hsvToRgb","hslToRgb","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","TinyColor","opts","_a","originalInput","roundA","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","_i","keys","formatSet","formattedString","hasAlpha","clone","lighten","amount","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","ret","complement","monochromatic","modification","splitcomplement","triad","polyad","tetrad","increment","equals","col","multiplier","rhombusPath","ctx","area","beginPath","moveTo","w","y","lineTo","closePath","wallPath","leftOffset","rightOffset","separatorPath","width","height","strokeColor","strokeWidth","fillColor","boxColor","separators","drawTop","contrast","shadowRoot","canvas","boxColorLight","boxColorDark","fillColorLight","fillColorDark","clearRect","strokeStyle","lineWidth","lineCap","rect","fillStyle","fill","stroke","step","fillHeight","renderer","getContext","classOrDescriptor","define","legacyCustomElement","elements","standardCustomElement","customElement"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","export function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var processPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    if (processPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    if (max === 360) {\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.includes('.') && parseFloat(n) === 1;\n}\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.includes('%');\n}\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return Number(n) * 100 + \"%\";\n    }\n    return n;\n}\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n","import { bound01, pad2 } from './util';\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0;\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = ((g - b) / d) + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = ((b - r) / d) + 2;\n                break;\n            case b:\n                h = ((r - g) / d) + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + ((q - p) * (6 * t));\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + ((q - p) * ((2 / 3) - t) * 6);\n    }\n    return p;\n}\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? (l * (1 + s)) : (l + s - (l * s));\n        var p = (2 * l) - q;\n        r = hue2rgb(p, q, h + (1 / 3));\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - (1 / 3));\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0;\n    }\n    else {\n        switch (max) {\n            case r:\n                h = ((g - b) / d) + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = ((b - r) / d) + 2;\n                break;\n            case b:\n                h = ((r - g) / d) + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - (f * s));\n    var t = v * (1 - ((1 - f) * s));\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n","export var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","import { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\nvar CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n","import { rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        if (color instanceof TinyColor) {\n            return color;\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format, (_a !== null && _a !== void 0 ? _a : rgb.format));\n        this.gradientType = opts.gradientType;\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    TinyColor.prototype.getBrightness = function () {\n        var rgb = this.toRgb();\n        return ((rgb.r * 299) + (rgb.g * 587) + (rgb.b * 114)) / 1000;\n    };\n    TinyColor.prototype.getLuminance = function () {\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    };\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this.roundA + \")\";\n    };\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this.roundA + \")\";\n    };\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\" + r + \", \" + g + \", \" + b + \")\" : \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + this.roundA + \")\";\n    };\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return Math.round(bound01(x, 255) * 100) + \"%\"; };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1 ?\n            \"rgb(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%)\" :\n            \"rgba(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%, \" + this.roundA + \")\";\n    };\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.keys(names); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (names[key] === hex) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = (format !== null && format !== void 0 ? format : this.format);\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n            g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n            b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n            a: ((rgb2.a - rgb1.a) * p) + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + (i * increment)) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n","import { TinyColor } from '@ctrl/tinycolor';\n\nexport function lighten(color: string, amount: number): string {\n\tconst col = new TinyColor(color),\n\t\t  brightness = col.getBrightness() / 255.0,\n\t      multiplier = 1.0 - 0.5*brightness;\n\t\n    return col.brighten(amount * multiplier).toString() || color;\n}\n\nexport function darken(color: string, amount: number): string {\n\tconst col = new TinyColor(color),\n\t\t  brightness = col.getBrightness() / 255.0,\n\t      multiplier = 1.0 - 0.5*brightness;\n\t\n    return col.darken(Math.round(amount * multiplier)).toString() || color;\n}\n","import { lighten, darken } from './color';\n\nexport interface RenderingOptions {\n    width: number,\n    height: number,\n    strokeColor: string,\n    fillColor: string,\n    boxColor: string,\n    strokeWidth: number,\n    separators: number,\n    drawTop: boolean,\n    contrast: number,\n    value:number\n}\n\ninterface Area {\n    x: number,\n    y: number,\n    w: number,\n    h: number\n}\n\ninterface Size {\n    w: number,\n    h: number\n}\n\nexport default function renderer(ctx: CanvasRenderingContext2D, options: RenderingOptions): void {\n    const { width, height, strokeColor, fillColor, boxColor, strokeWidth, separators, drawTop, contrast, value } = options;\n\n    const boxColorLight = lighten(boxColor, contrast),\n          boxColorDark = darken(boxColor, contrast),\n          fillColorLight = lighten(fillColor, contrast),\n          fillColorDark = darken(fillColor, contrast);\n\n    ctx.clearRect(0, 0, options.width, options.height);\n\n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = \"round\";\n\n    const rect: Area = { x: strokeWidth/2, y: strokeWidth/2, w: width - strokeWidth - 1, h: height - strokeWidth - 1 },\n          size: Size = { w: rect.w, h: rect.w/2 };\n\n    const bottomRhombusArea: Area = { x: rect.x, y: rect.y + rect.h - size.h, w: size.w, h: size.h };\n    rhombusPath(ctx, bottomRhombusArea);\n    ctx.fillStyle = boxColor;\n    ctx.fill();\n    ctx.stroke();\n\n    const leftBackWallArea: Area = { x: rect.x, y: rect.y, w: size.w/2, h: rect.h };\n    wallPath(ctx, leftBackWallArea, size, 0, -size.h/2);\n    ctx.fillStyle = boxColorLight;\n    ctx.fill();\n    ctx.stroke();\n\n    const rightBackWallArea: Area = { x: rect.x+rect.w/2, y: rect.y, w: size.w/2, h: rect.h };\n    wallPath(ctx, rightBackWallArea, size, -size.h/2, 0);\n    ctx.fillStyle = boxColorDark;\n    ctx.fill();\n    ctx.stroke();\n\n    if (separators > 1) {\n        const step = 100.0/separators;\n\n        for (let s = step; s < 100.0; s += step) {\n            const separatorArea: Area = { x: rect.x, y: rect.y + rect.h - size.h - (rect.h - size.h) * s/100.0, w: size.w, h: size.h };\n            separatorPath(ctx, separatorArea);\n            ctx.stroke();\n        }\n    }\n\n\n    if (value > 0) {\n        const fillHeight = size.h + (value / 100.0 * (rect.h - size.h));\n\n        const leftFillWallArea: Area = { x: rect.x, y: rect.y + rect.h - fillHeight, w: size.w/2, h: fillHeight };\n        wallPath(ctx, leftFillWallArea, size, 0, size.h/2);\n        ctx.fillStyle = fillColorDark;\n        ctx.fill();\n        ctx.stroke();\n\n        const rightFillWallArea: Area = { x: rect.x+rect.w/2, y: rect.y + rect.h - fillHeight, w: size.w/2, h: fillHeight };\n        wallPath(ctx, rightFillWallArea, size, size.h/2, 0);\n        ctx.fillStyle = fillColorLight;\n        ctx.fill();\n        ctx.stroke();\n\n        const fillTopRhombusArea: Area = { x: rect.x, y: rect.y + rect.h - fillHeight, w: size.w, h: size.h };\n        rhombusPath(ctx, fillTopRhombusArea);\n        ctx.fillStyle = fillColor;\n        ctx.fill();\n        ctx.stroke();\n    }\n\n    if (!drawTop) {\n        return;\n    }\n\n    const leftFrontWallArea: Area = { x: rect.x, y: rect.y, w: size.w/2, h: rect.h };\n    wallPath(ctx, leftFrontWallArea, size, 0, size.h/2);\n    ctx.stroke();\n\n    const rightFrontWallArea: Area = { x: rect.x+rect.w/2, y: rect.y, w: size.w/2, h: rect.h };\n    wallPath(ctx, rightFrontWallArea, size, size.h/2, 0);\n    ctx.stroke();\n\n    const topRhombusArea: Area = { x: rect.x, y: rect.y, w: size.w, h: size.h };\n    rhombusPath(ctx, topRhombusArea);\n    ctx.fillStyle = boxColor;\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction rhombusPath(ctx: CanvasRenderingContext2D, area: Area) {\n    ctx.beginPath();\n    ctx.moveTo(area.x+area.w/2, area.y);\n    ctx.lineTo(area.x+area.w, area.y+area.h/2);\n    ctx.lineTo(area.x+area.w/2, area.y+area.h);\n    ctx.lineTo(area.x,area.y+area.h/2);\n    ctx.closePath();\n}\n\nfunction wallPath(ctx: CanvasRenderingContext2D, area: Area, size: Size, leftOffset: number, rightOffset: number): void {\n    ctx.beginPath();\n    ctx.moveTo(area.x, area.y+size.h/2+leftOffset);\n    ctx.lineTo(area.x+area.w, area.y+size.h/2+rightOffset);\n    ctx.lineTo(area.x+area.w, area.y+area.h-size.h/2+rightOffset);\n    ctx.lineTo(area.x, area.y+area.h-size.h/2+leftOffset);\n    ctx.closePath();\n}\n\nfunction separatorPath(ctx: CanvasRenderingContext2D, area: Area): void {\n    ctx.beginPath();\n    ctx.moveTo(area.x+area.w/2-area.w/10, area.y+area.h/10);\n    ctx.lineTo(area.x+area.w/2, area.y);\n    ctx.lineTo(area.x+area.w/2+area.w/10, area.y+area.h/10);\n}\n","import { html, LitElement, customElement, property } from 'lit-element';\nimport renderer, { RenderingOptions } from '../renderer';\n\n@customElement('water-box')\nexport default class WaterBox extends LitElement {\n\n  @property({ type: Number })\n  width: number = 320;\n\n  @property({ type: Number })\n  height: number = 320;\n\n  @property({ type: Number })\n  value: number = 50;\n\n  @property({ type: String, attribute: 'stroke-color' })\n  strokeColor: string = 'rgba(127,127,127,0.8)';\n\n  @property({ type: Number, attribute: 'border-width' })\n  strokeWidth: number = 1;\n\n  @property({ type: String, attribute: 'fill-color' })\n  fillColor: string = 'rgba(127,127,224,0.8)';\n\n  @property({ type: String, attribute: 'box-color' })\n  boxColor: string = 'rgba(128,128,128,0.4)';\n\n  @property({ type: Number })\n  separators: number = 5;\n\n  @property({ type: Boolean, attribute: 'draw-top' })\n  drawTop: boolean = false;\n\n  @property({ type: Number })\n  contrast: number = 20;\n\n  render() {\n    return html`<canvas width=\"${this.width}\" height=\"${this.height}\"></canvas>`;\n  }\n\n  updated() {\n    if (this.shadowRoot !== null) {\n      const canvas = <HTMLCanvasElement> this.shadowRoot.querySelector(\"canvas\");\n      if (canvas !== null) {\n        const ctx = <CanvasRenderingContext2D> canvas.getContext(\"2d\");\n        const options: RenderingOptions = {\n          width: this.width,\n          height: this.height,\n          strokeColor: this.strokeColor,\n          fillColor: this.fillColor,\n          boxColor: this.boxColor,\n          strokeWidth: this.strokeWidth,\n          separators: this.separators,\n          drawTop: this.drawTop,\n          contrast: this.contrast,\n          value: this.value\n        };\n        renderer(ctx, options);\n      }\n    }\n  }\n}\n"],"sourceRoot":""}